{
	"info": {
		"_postman_id": "description-service-v4-2025",
		"name": "YouTube Description Service - v4",
		"description": "## YouTube Description Service API\n\n**Complete collection for testing the Description Service with unified generation approach.**\n\n### Architecture\n- **Novel-Level Generation:** 1 OpenAI call per novel (not per video)\n- **88% Cost Savings:** Reuses About/What to Expect/Tags for all videos\n- **2 Prompts:** System prompt (format) + User prompt (content)\n\n### Quick Start\n1. Import this file into Postman\n2. Edit collection variables:\n   - Local: `http://localhost:8080`\n   - Production: `https://description-service.sevalla.app`\n3. Start testing!\n\n### Efficiency\n```\n1 Novel (8 videos) = 1 OpenAI Call\n‚îú‚îÄ Generates: About, What to Expect, Tags\n‚îú‚îÄ Reuses for all 8 videos\n‚îî‚îÄ Only timestamps unique per video\nResult: 88% cheaper, 77% faster!\n```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{api_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string",
			"description": "Service URL. Change to https://description-service.sevalla.app for production"
		},
		{
			"key": "api_token",
			"value": "M44483403m",
			"type": "string",
			"description": "Authentication token"
		},
		{
			"key": "job_id",
			"value": "",
			"type": "string",
			"description": "Auto-populated from generate-descriptions response"
		},
		{
			"key": "novel_name",
			"value": "Farming at Hogwarts",
			"type": "string",
			"description": "Novel name for testing"
		},
		{
			"key": "video_name",
			"value": "Farming at Hogwarts Chapters 1 to 20",
			"type": "string",
			"description": "Video name for preview testing"
		}
	],
	"item": [
		{
			"name": "üè• Health Check",
			"item": [
				{
					"name": "Get Service Health",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "### Service Health Check\n\n**No authentication required**\n\n**Expected Response:**\n```json\n{\n  \"status\": \"healthy\",\n  \"service\": \"description-service\",\n  \"version\": \"1.0.0\"\n}\n```"
					},
					"response": []
				}
			]
		},
		{
			"name": "üìù Description Generation",
			"item": [
				{
					"name": "1. Generate Descriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Auto-save job_id",
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.job_id) {",
									"        pm.collectionVariables.set(\"job_id\", jsonData.job_id);",
									"        console.log(\"‚úÖ Job ID saved: \" + jsonData.job_id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"novel_name\": \"Farming at Hogwarts\",\n  \"novel_context\": \"A magical farming system fanfiction set in the Harry Potter universe. The protagonist discovers an enchanted agricultural system at Hogwarts, allowing them to grow magical plants, raise mythical creatures, and transform the school grounds into a thriving magical farm.\",\n  \"playlist_url\": \"https://youtube.com/playlist?list=PLFarmingAtHogwarts\",\n  \"force\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/generate-descriptions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"generate-descriptions"
							]
						},
						"description": "### Generate Descriptions (Novel-Level)\n\n**Efficiency:** 1 OpenAI call generates all 4 sections for entire novel!\n\n**Request:**\n- `novel_name` (required) - Novel name\n- `novel_context` (required) - Brief description for AI\n- `playlist_url` (required) - YouTube playlist\n- `subscribe_text` (optional) - Custom subscribe text (AI generates if omitted)\n- `force` (optional) - false = skip existing, true = regenerate all\n\n**AI Generates:**\n1. About (8-13 lines)\n2. What to Expect (3-6 sentences)\n3. Subscribe (2-3 sentences) ‚Üê AI-generated!\n4. Tags (hashtags, 500 chars max)\n\n**Process:**\n1. Calls OpenAI once with 10k tokens\n2. Generates 4 sections\n3. Stores in database\n4. For each video:\n   - Reads unique timestamps\n   - Builds description using SAME AI content\n   - Saves to S3\n\n**Cost:** ~$0.02 per novel (not per video!)\n**Time:** ~6 seconds for 8 videos"
					},
					"response": []
				},
				{
					"name": "2. Get Job Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/jobs/{{job_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"jobs",
								"{{job_id}}"
							]
						},
						"description": "### Monitor Generation Progress\n\n**Response:**\n```json\n{\n  \"job_id\": \"uuid\",\n  \"status\": \"processing\",\n  \"progress\": {\n    \"descriptions_generated\": 5,\n    \"total_videos\": 8,\n    \"percent_complete\": 62.5\n  }\n}\n```\n\n**Poll every 2-3 seconds until status is 'completed'**"
					},
					"response": []
				},
				{
					"name": "3. List All Descriptions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/descriptions/{{novel_name}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"descriptions",
								"{{novel_name}}"
							]
						},
						"description": "### List Descriptions for a Novel\n\n**Returns:** All video names that have descriptions"
					},
					"response": []
				},
				{
					"name": "4. Preview Description",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/descriptions/{{novel_name}}/{{video_name}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"descriptions",
								"{{novel_name}}",
								"{{video_name}}"
							]
						},
						"description": "### Preview Full Description\n\n**Returns complete description with:**\n- Full Playlist URL\n- About section (8-13 lines)\n- What to Expect (3-6 sentences)\n- Subscribe text\n- Timestamps (unique per video)\n- Tags (12 hashtags)"
					},
					"response": []
				},
				{
					"name": "5. Get Novel Context",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/novel-context/{{novel_name}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"novel-context",
								"{{novel_name}}"
							]
						},
						"description": "### Get Novel Context Data\n\n**Purpose:** Fetch the latest completed workflow data for a novel\n\n**Returns:**\n- `novel_context` - The context/description of the novel\n- `playlist_url` - The YouTube playlist URL\n- `subscribe_text` - The subscribe call-to-action text\n\n**Behavior:**\n- Returns data from the most recent completed workflow (highest ID)\n- Only considers workflows with status='completed'\n- Returns null values if no completed workflow exists\n\n**Use Case:** Frontend can retrieve these values to display or pre-fill forms"
					},
					"response": []
				}
			]
		},
		{
			"name": "‚öôÔ∏è Admin - Prompt Management",
			"item": [
				{
					"name": "List All Prompts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/prompts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"prompts"
							]
						},
						"description": "### List All Prompts\n\n**Returns 2 prompts:**\n\n1. **description_system** (system)\n   - Controls output format\n   - Defines section headers (ABOUT:, WHAT_TO_EXPECT:, TAGS:)\n\n2. **full_description** (user)\n   - Defines content requirements\n   - Specifies lengths and style\n\n**Response:**\n```json\n{\n  \"success\": true,\n  \"total_prompts\": 2,\n  \"prompts\": [\n    {\n      \"name\": \"description_system\",\n      \"prompt_type\": \"system\",\n      \"description\": \"Controls output format\"\n    },\n    {\n      \"name\": \"full_description\",\n      \"prompt_type\": \"user\",\n      \"description\": \"Generates content\"\n    }\n  ]\n}\n```"
					},
					"response": []
				},
				{
					"name": "Get System Prompt (Format Control)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/prompts/description_system",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"prompts",
								"description_system"
							]
						},
						"description": "### Get System Prompt\n\n**Purpose:** Controls how AI structures output\n\n**Defines:**\n- Section headers (ABOUT:, WHAT_TO_EXPECT:, TAGS:)\n- Output format rules\n- Structure requirements\n\n**Edit this to change output format**"
					},
					"response": []
				},
				{
					"name": "Get User Prompt (Content Generation)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/prompts/full_description",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"prompts",
								"full_description"
							]
						},
						"description": "### Get User Prompt\n\n**Purpose:** Defines content requirements\n\n**Specifies:**\n- About: 8-13 lines\n- What to Expect: 3-6 sentences\n- Tags: 500 chars max\n- Tone, style, what to include\n\n**Variables:**\n- `{novel_name}` - Novel title\n- `{novel_context}` - User context\n\n**Edit this to change content generation**"
					},
					"response": []
				},
				{
					"name": "Update System Prompt (Format)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"prompt_text\": \"You are an expert at writing YouTube descriptions.\\n\\nCRITICAL: Return in EXACTLY this format:\\n\\nABOUT:\\n[8-13 lines]\\n\\nWHAT_TO_EXPECT:\\n[3-6 sentences]\\n\\nTAGS:\\n[Hashtags, max 500 chars]\\n\\nRULES:\\n1. Use exact headers: ABOUT:, WHAT_TO_EXPECT:, TAGS:\\n2. One blank line between sections\\n3. No extra formatting\",\n  \"description\": \"System prompt for output format control\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/prompts/description_system",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"prompts",
								"description_system"
							]
						},
						"description": "### Update System Prompt\n\n**Controls:** Output format structure\n\n**Use this to:**\n- Change section headers\n- Modify output structure\n- Add/remove formatting rules\n\n**Takes effect immediately for new generations**"
					},
					"response": []
				},
				{
					"name": "Update User Prompt (Content)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"prompt_text\": \"Generate YouTube description for novel.\\n\\nNovel: {novel_name}\\nContext: {novel_context}\\n\\nABOUT (8-13 lines):\\n- Introduce world and premise\\n- For fanfic: mention original universe\\n- Immersive language\\n- NO promo language\\n\\nWHAT_TO_EXPECT (3-6 sentences):\\n- Content summary\\n- Unique aspects\\n- Emotive language\\n- NO promo language\\n\\nTAGS (500 chars max):\\n- Hashtags (#tag)\\n- Mix broad/specific\\n- YouTube keywords\\n- Order: specific ‚Üí broad\",\n  \"description\": \"User prompt for content generation\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/prompts/full_description",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"prompts",
								"full_description"
							]
						},
						"description": "### Update User Prompt\n\n**Controls:** Content generation requirements\n\n**Use this to:**\n- Change section lengths\n- Modify tone and style\n- Update content requirements\n- Add/remove guidelines\n\n**Variables:**\n- `{novel_name}` - Novel title\n- `{novel_context}` - User context\n\n**Takes effect immediately for new generations**"
					},
					"response": []
				}
			],
			"description": "Manage the 2 prompts:\n- description_system (system) - Format control\n- full_description (user) - Content generation"
		}
	]
}
